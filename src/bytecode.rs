#[derive(Debug, Clone)]
enum Bytecode {
    LoadNumber(f64),
    LoadString(String),
    Add,
    Subtract,
    Multiply,
    Divide,
    Modulus,
    Max,
    Min,
    Power,
    Sqrt,
    Sin,
    Cos,
    Tan,
    Abs,
    Print,
    Halt,
    LoadVar(String),
    StoreVar(String),
    JumpIfZero(usize),
    Jump(usize),
    Equal,
    NotEqual,
    LessThan,
    LessThanOrEqual,
    GreaterThan,
    GreaterThanOrEqual,
    And,
    Or,
    Not,
    Call(String),
    Return,
    Zero,
    Even,
    Odd,
    Pos,
    Neg,
    Concat,
    Len,
    Substring,
    ForLoop(String, f64, f64, Vec<Bytecode>),
    If(Vec<Bytecode>, Vec<Bytecode>), // if (then, else)
    Switch(f64, Vec<(f64, Vec<Bytecode>)>, Vec<Bytecode>), // switch (value, cases, default)
    Func(String, Vec<String>, Vec<Bytecode>), // func (name, params, body)
}

